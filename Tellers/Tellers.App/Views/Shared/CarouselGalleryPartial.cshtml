@using Tellers.Utilities.Interfaces;
@using Tellers.ViewModels.Story;
@model IViewModelInfoBox<List<StoryCardViewModel>>

@if(Model.ViewModel == null || Model.ViewModel.Count == 0)
{
    <div class="px-4 py-1 text-center" style="background-color: aliceblue; margin-top: 2rem">
        <p class="display-4 fw-bold">No stories yet :(</p>
    </div>
}
else
{
    <!-- Carousel wrapper -->

    <div id="carouselMultiItemExample@(Model.ModelIndicator)"
     class="carousel slide carousel-dark text-center"
     data-bs-ride="carousel">



        <!-- Inner -->
        <div class="carousel-inner py-4">
            <!-- Single item (contains 3 cards)-->
            @for (int i = 0; i < 3; i++)
            {
                var classElement = i == 0 ? "active" : string.Empty;
                var noBookCover = "/images/no-book-cover-available.jpg";

                <div class="carousel-item @classElement">
                    <div class="container">
                        <div class="row">

                            @for (int j = i * 3; j < (i * 3) + 3; j++)
                            {
                                <div class="col-lg-4">
                                    <div class="card">
                                        <img src="@(Model?.ViewModel[j]?.BookCoverPicture ?? noBookCover)"
                                 class="card-img-top"
                                 alt="Waterfall" />
                                        <div class="card-body">
                                            <h5 class="card-title">@(Model?.ViewModel[j]?.Title ?? "No title")</h5>
                                            <p class="card-text"></p>
                                            @if (User?.Identity?.IsAuthenticated ?? false)
                                            {
                                                <a asp-controller="Story" asp-action="Read" asp-route-storyId="@Model.ViewModel[j].Id" class="btn btn-primary">Read it</a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Inner -->
        <!-- Controls -->
        <div class="d-flex justify-content-center mb-4">
            <button class="carousel-control-prev position-relative"
                type="button"
                data-bs-target="#carouselMultiItemExample@(Model.ModelIndicator)"
                data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next position-relative"
                type="button"
                data-bs-target="#carouselMultiItemExample@(Model.ModelIndicator)"
                data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
    <!-- Carousel wrapper -->
}
