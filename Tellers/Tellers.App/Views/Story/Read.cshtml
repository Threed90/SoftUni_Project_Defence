@using System.Security.Claims;
@using Tellers.ViewModels.Story;
@model StoryDetailsViewModel

<div class="container align-content-center" style="margin-top: 10rem">
    <main role="main" class="pb-3 embed-responsive">
        <div class="jumbotron p-3 p-md-5 text-white rounded bg-dark d-inline-flex col-12">
            <div class="col-md-6 px-0 ">
                <h1 class="display-4 font-italic">@Model.Title</h1>
                <p class="lead my-3">@Model.StorySummary</p>
                <p class="lead mb-0 blog-post-meta" style="margin-top: 5em">

                    <a asp-action="Info" asp-controller="Profile" asp-route-profileId="@Model.CreatorId">
                        <img class="rounded-circle shadow-1-strong me-3" 
                             src="@(string.IsNullOrWhiteSpace(Model.CreatorPictureUrl) == false ? Model.CreatorPictureUrl : "/images/profilePicDefault.png")" alt="avatar" width="65"
                             height="65" />
                    </a>

                    @Model.Month @Model.Day, @Model.Year by


                    @if (string.IsNullOrEmpty(Model.ExternalAuthorName) == false)
                    {
                        @Model.ExternalAuthorName
                        ;
                    }
                    else if (User.Identity.Name == Model.CreatorUsername)
                    {
                        @("Tellers team")
                        ;
                    }
                    else
                    {
                        @((Model.CreatorFirstName == null ? string.Empty :
                            Model.CreatorFirstName +
                            (Model.CreatorMiddleName == null ? string.Empty : $" {Model.CreatorMiddleName}") +
                            (Model.CreatorLastName == null ? string.Empty : $" {Model.CreatorLastName}") +
                            (Model.CreatorPseudonym == null ? string.Empty : $" - {Model.CreatorPseudonym}")) == string.Empty
                            ?
                            (Model.CreatorUsername == string.Empty ? "Unknown post creator." : Model.CreatorUsername)
                            :
                            (Model.CreatorFirstName == null ? string.Empty :
                            Model.CreatorFirstName +
                            (Model.CreatorMiddleName == null ? string.Empty : $" {Model.CreatorMiddleName}") +
                            (Model.CreatorLastName == null ? string.Empty : $" {Model.CreatorLastName}") +
                            (Model.CreatorPseudonym == null ? string.Empty : $" - {Model.CreatorPseudonym}")))
                    }
                </p>
            </div>
            <img src="@(Model.BookCoverPicture ?? "/images/no-book-cover-available.jpg")" class="img-fluid col-md-6 overflow-hidden" alt="book cover">
        </div>

        <div class="ratio ratio-16x9 viewPDF" style="margin-top: 0.5em;">
        </div>
    </main>

    <partial name="_ReadRevuesPartial.cshtml" model="@Model.Revues" />

</div>
<label id="pdfUrl" hidden>@Model.PdfFileUrl</label>
@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfobject/2.2.8/pdfobject.min.js" integrity="sha512-MoP2OErV7Mtk4VL893VYBFq8yJHWQtqJxTyIAsCVKzILrvHyKQpAwJf9noILczN6psvXUxTr19T5h+ndywCoVw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script type="text/javascript">

        let label = document.getElementById("pdfUrl");
        let url = label.textContent;

        let urlEmbeding = `https://docs.google.com/gview?url=${url}&embedded=true`;
        if (url.includes('drive.google.com')) {
            urlEmbeding = url;
        }

        if (PDFObject.supportsPDFs) {
            PDFObject.embed(urlEmbeding + "#toolbar=0&pagemode=none", ".viewPDF",)
        } else {
            let result = confirm("This browser does not support PDFObject. Do you want to stay and read story summury?");

            if (!result) {
                window.location.href = "/";
            }
        }
    </script>
    <script type="text/javascript">
        'use strict'
        //let starts = document.querySelectorAll(".fa.fa-star");

        let rating = Number(document.getElementById("ratingStar").textContent);

        if (rating >= 1) {
            document.querySelector(".fa.fa-star.oneStar").classList.add("checked");
        }
        if (rating >= 2) {
            document.querySelector(".fa.fa-star.twoStar").classList.add("checked");
        }
        if (rating >= 3) {
            document.querySelector(".fa.fa-star.threeStar").classList.add("checked");
        }
        if (rating >= 4) {
            document.querySelector(".fa.fa-star.fourStar").classList.add("checked");
        }
        if (rating >= 5) {
            document.querySelector(".fa.fa-star.fiveStar").classList.add("checked");
        }
    </script>

}
}

@section Styles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
}

